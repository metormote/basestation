/* Automatically generated nanopb header */
/* Generated by nanopb-0.1.9-dev at Thu Jun  6 18:31:35 2013. */

#ifndef _PB_BASESTATION_PB_H_
#define _PB_BASESTATION_PB_H_
#include <pb.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _basestation_Out_Node_DeviceType {
    basestation_Out_Node_DeviceType_BASE = 0,
    basestation_Out_Node_DeviceType_MASTER = 1,
    basestation_Out_Node_DeviceType_SLAVE = 2,
    basestation_Out_Node_DeviceType_PHONE = 3
} basestation_Out_Node_DeviceType;

/* Struct definitions */
typedef struct _basestation_In {
    bool has_time;
    uint64_t time;
    bool has_networkId;
    uint64_t networkId;
    bool has_lastTransferSize;
    uint32_t lastTransferSize;
    bool has_transferInterval;
    uint32_t transferInterval;
} basestation_In;

typedef struct _basestation_Out {
    bool has_batteryLevel;
    uint32_t batteryLevel;
    bool has_packetLoss;
    uint32_t packetLoss;
    bool has_temperature;
    int32_t temperature;
    pb_callback_t topology;
    pb_callback_t node;
} basestation_Out;

typedef struct _basestation_Out_Node {
    uint32_t nodeId;
    uint64_t deviceId;
    bool has_deviceType;
    basestation_Out_Node_DeviceType deviceType;
} basestation_Out_Node;

typedef struct _basestation_Out_Topology {
    uint32_t destinationId;
    uint32_t previousId;
} basestation_Out_Topology;

/* Default values for struct fields */

/* Struct field encoding specification for nanopb */
extern const pb_field_t basestation_Out_fields[6];
extern const pb_field_t basestation_Out_Topology_fields[3];
extern const pb_field_t basestation_Out_Node_fields[4];
extern const pb_field_t basestation_In_fields[5];

/* Check that field information fits in pb_field_t */
#if !defined(PB_FIELD_16BIT) && !defined(PB_FIELD_32BIT)
STATIC_ASSERT((pb_membersize(basestation_Out, topology) < 256 && pb_membersize(basestation_Out, node) < 256), YOU_MUST_DEFINE_PB_FIELD_16BIT_FOR_MESSAGES_basestation_Out_basestation_Out_Topology_basestation_Out_Node_basestation_In)
#endif

#if !defined(PB_FIELD_32BIT)
STATIC_ASSERT((pb_membersize(basestation_Out, topology) < 65536 && pb_membersize(basestation_Out, node) < 65536), YOU_MUST_DEFINE_PB_FIELD_32BIT_FOR_MESSAGES_basestation_Out_basestation_Out_Topology_basestation_Out_Node_basestation_In)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
